<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ManageServices.dao.PaperMapper">
    <cache type="com.ManageServices.redis.RedisCache2"/>

    <insert id="insertByBatch">
        INSERT INTO paper_(paperId, title, summary, keyword, author) INTO VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.paperId},#{item.title},#{item.summary},#{item.keyword},#{item.title})
        </foreach>
    </insert>

    <insert id="insertPaperByMap" parameterType="java.util.Map" useGeneratedKeys="true" keyColumn="paperId" keyProperty="paperId">
        INSERT
        INTO paper_ (title,summary,keyword,author,filePath,ownerId)
        VALUES (#{title},#{summary},#{keyword},#{author},#{filePath},#{ownerId})
        <selectKey resultType ="int" keyProperty= "paperId" order= "AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey >
    </insert>

    <!--<insert id="insertPaper2" parameterType="java.util.Map">-->
        <!--INSERT-->
        <!--INTO paper_ (title,summary,keyword,author,filePath,publishedDate,ownerId)-->
        <!--VALUES (#{title},#{summary},#{keyword},#{author},#{filePath},#{publishedDate},#{ownerId})-->
        <!--<selectKey resultType ="int" keyProperty= "paperId" order= "AFTER">-->
            <!--SELECT LAST_INSERT_ID()-->
        <!--</selectKey >-->
    <!--</insert>-->

    <update id="updatePaper">
        UPDATE paper_
        <set>
            <if test="price != -1"> price = #{price},</if>
            <if test="downloadCount != -1"> downloadCount = downloadCount + 1,</if>
        </set>
        WHERE paperId = #{paperId}
    </update>

    <delete id="deletePaper">
        DELETE FROM paper_
        <where>
            <if test="paperId != -1">
                AND paperId = #{paperId}
            </if>
            <if test="expertId != -1">
                AND expertId = #{expertId}
            </if>
        </where>
    </delete>

    <!--<select id="selectPaperLike" resultType="java.util.Map">-->
        <!--SELECT paperId,title,author,downloadCount-->
        <!--FROM paper_-->
        <!--<where>-->
            <!--<if test="title != null">-->
                <!--and title LIKE "%"#{title}"%"-->
            <!--</if>-->
            <!--<if test="summary != null">-->
                <!--and summary LIKE "%"#{summary}"%"-->
            <!--</if>-->
            <!--<if test="keyword != null">-->
                <!--and keyword LIKE "%"#{keyword}"%"-->
            <!--</if>-->
            <!--<if test="author != null">-->
                <!--and author LIKE "%"#{author}"%"-->
            <!--</if>-->
        <!--</where>-->
    <!--</select>-->

    <resultMap id="paperBasic" type="java.util.Map">
        <id property="paperId" column="paperId" javaType="int"></id>
        <result property="title" column="title" javaType="String"></result>
        <result property="summary" column="summary" javaType="String"></result>
        <result property="keyword" column="keyword" javaType="String"></result>
        <result property="downloadCount" column="downloadCount" javaType="int"></result>
        <collection  property="authorList" javaType="java.util.List" ofType="java.util.Map">
            <id column="expertId" javaType="int" property="expertId"></id>
            <result property="name" column="name" javaType="String"></result>
            <!--<association property="expertName" column="name" javaType="String">-->
            <!--</association>-->
        </collection>
    </resultMap>
    <!--专家参与的所有论文-->
    <select id="selectPaperByEid" resultMap="paperBasic">
        SELECT p.*,ep.expertId,e.name
        FROM paper_ p
          LEFT JOIN expert_paper_ ep ON p.paperId = ep.paperId
          LEFT JOIN expert_ e ON ep.expertId = e.expertId
        WHERE p.paperId in
          (
            SELECT paperId from expert_paper_ ep2 WHERE ep2.expertId = #{expertId}
          )
    </select>

    <select id="selectOwnPaperByEid" resultMap="paperBasic">
        SELECT p.*,ep.expertId,e.name
        FROM paper_ p
          LEFT JOIN expert_paper_ ep ON p.paperId = ep.paperId
          LEFT JOIN expert_ e ON ep.expertId = e.expertId
        WHERE p.paperId in
          (
            SELECT paperId from paper_ p2 WHERE p2.ownerId = #{expertId}
          )
    </select>

    <resultMap id="paperDetial" type="java.util.Map">
        <id property="paperId" column="paperId" javaType="int"></id>
        <result property="title" column="title" javaType="String"></result>
        <result property="summary" column="summary" javaType="String"></result>
        <result property="keyword" column="keyword" javaType="String"></result>
        <result property="downloadCount" column="downloadCount" javaType="int"></result>
        <result property="price" column="price" javaType="int"></result>
        <result property="filepath" column="filepath" javaType="String"></result>
        <result property="ownerId" column="ownerId" javaType="int"></result>
        <collection  property="authorList" javaType="java.util.List" ofType="java.util.Map">
            <id column="expertId" javaType="int" property="expertId"></id>
            <association property="expertName" column="name" javaType="String">
            </association>
        </collection>
    </resultMap>
    <select id="selectPaperDetial"  resultMap="paperDetial">
        SELECT p.*,ep.expertId,e.name FROM paper_ p LEFT JOIN expert_paper_ ep ON p.paperId = ep.paperId
        LEFT JOIN expert_ e ON ep.expertId = e.expertId
        WHERE p.paperId = #{paperId}
    </select>
</mapper>